[{"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js":"1","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js":"2","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js":"3","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js":"4","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js":"5","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js":"6","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js":"7","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js":"8","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/arrow/Arrow.js":"9","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/dbCategoryList.js":"10"},{"size":282,"mtime":1616352202000,"results":"11","hashOfConfig":"12"},{"size":2203,"mtime":1627229072000,"results":"13","hashOfConfig":"12"},{"size":6912,"mtime":1627233233000,"results":"14","hashOfConfig":"12"},{"size":1492,"mtime":1627229072000,"results":"15","hashOfConfig":"12"},{"size":1626,"mtime":1627229072000,"results":"16","hashOfConfig":"12"},{"size":31988,"mtime":1616204629000,"results":"17","hashOfConfig":"12"},{"size":336,"mtime":1626749875000,"results":"18","hashOfConfig":"12"},{"size":8426,"mtime":1616267921000,"results":"19","hashOfConfig":"12"},{"size":1220,"mtime":1626750376000,"results":"20","hashOfConfig":"12"},{"size":663,"mtime":1627232742000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"t7kcnj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js",[],["47","48"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js",["49","50"],"import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { PodcastContext } from './context/PodcastContext';\n\nfunction App() {\n\tconst [ podcasts, setPodcasts ] = useState([]);\n\tconst [ state, setState ] = useContext(PodcastContext);\n\n\tuseEffect(() => {\n\t\tgetApiData(67);\n\t\tsetState({ page: 1, category: 67 });\n\t}, []);\n\n\tconst getApiData = async (genreId, page) => {\n\t\tawait fetch(\n\t\t\t`https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=${genreId}&page=${page}&region=us&safe_mode=0`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'X-ListenAPI-Key': process.env.REACT_APP_LISTEN_NOTES_API_KEY\n\t\t\t\t},\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t}\n\t\t).then((response) => {\n\t\t\tresponse.json().then((data) => {\n\t\t\t\tconsole.log(data.podcasts[0], 'data in listennotes call see if doubling');\n\t\t\t\tconst getRating = async () => {\n\t\t\t\t\tfor (let pod of data.podcasts) {\n\t\t\t\t\t\tconst id = pod.id;\n\t\t\t\t\t\tawait axios\n\t\t\t\t\t\t\t.get(`http://localhost:7000/findId/?data=${id}`)\n\t\t\t\t\t\t\t.then(function(response) {\n\t\t\t\t\t\t\t\tpod['rating'] = response.data.rating;\n\t\t\t\t\t\t\t\tpod['numberOfRatings'] = response.data.numberOfRatings || 'N/A';\n\t\t\t\t\t\t\t\tpod['itunes'] = response.data.itunes;\n\t\t\t\t\t\t\t\t// pod['description'] = response.data.description;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tawait setPodcasts([ data.podcasts ]);\n\t\t\t\t};\n\t\t\t\tgetRating();\n\t\t\t});\n\t\t});\n\t};\n\n\t// const getTopPodcasts = async (rating, numberRatings) => {\n\t// \t// const getBest = async () => {\n\t// \tawait axios\n\t// \t\t.post(`http://localhost:7000/getTopPodcasts/?rating=${rating}&numberRatings=${numberRatings}`, {\n\t// \t\t\tbody: {\n\t// \t\t\t\ttodo: { rating }\n\t// \t\t\t}\n\t// \t\t})\n\t// \t\t.then(function(response) {\n\t// \t\t\tconsole.log(response.data, 'response.data 29 in Header');\n\t// \t\t\tsetPodcasts(response.data);\n\t// \t\t})\n\t// \t\t.catch(function(error) {\n\t// \t\t\tconsole.log(error);\n\t// \t\t});\n\n\t// \t// await setPodcasts([ data.podcasts ]);\n\t// \t// };\n\t// \t// getBest();\n\t// };\n\n\treturn <Header podcasts={podcasts} getApiData={getApiData} />;\n}\n\nexport default App;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js",["51","52","53","54"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js",["55","56","57"],"import React, { useState, useEffect, useContext } from 'react';\nimport './CardList.css';\nimport Card from '../Card/Card';\nimport Arrow from '../arrow/Arrow';\nimport { PodcastContext } from '../../context/PodcastContext';\n\nconst CardList = ({ podcasts, topPodcasts, getData, isLoading }) => {\n\t// const [ isLoading, setIsLoading ] = useState(true);\n\tconst [ displayTopPodcasts, setDisplayTopPodcasts ] = useState(false);\n\tconst [ state, setState ] = useContext(PodcastContext);\n\tconsole.log(topPodcasts, 'topPodcasts in CardList');\n\t// console.log(loader, 'loader in CardList');\n\n\t// useEffect(() => {\n\t// \tsetTimeout(() => setIsLoading(false), 6000);\n\t// }, []);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (topPodcasts) {\n\t\t\t\tsetDisplayTopPodcasts(true);\n\t\t\t\tconsole.log('There are Top Podcasts to Display!!!!');\n\t\t\t}\n\t\t},\n\t\t[ topPodcasts ]\n\t);\n\n\treturn (\n\t\t<div className=\"outer-container\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"podcast-display\">\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t<div id=\"preloader\">\n\t\t\t\t\t\t\t<div id=\"loader\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : topPodcasts ? (\n\t\t\t\t\t\ttopPodcasts.map((pod) => <Card key={pod.id} podcast={pod} />)\n\t\t\t\t\t) : podcasts.podcasts[0] ? (\n\t\t\t\t\t\tpodcasts.podcasts[0].map((pod) => <Card key={pod.id} podcast={pod} />)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div id=\"preloader\">\n\t\t\t\t\t\t\t<div id=\"loader\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{podcasts.podcasts[0] && !state.isLoading ? <Arrow getData={getData} showArrow={isLoading} /> : null}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js",[],["58","59"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/arrow/Arrow.js",["60","61"],"import React, { useContext } from 'react';\nimport './Arrow.css';\nimport { PodcastContext } from '../../context/PodcastContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretSquareLeft, faCaretSquareRight } from '@fortawesome/fontawesome-free-solid';\n\nconst Arrow = ({ getData, isLoading }) => {\n\tconst [ state, setState ] = useContext(PodcastContext);\n\tconst page = state.page;\n\n\tconst addPage = async () => {\n\t\tsetState({ ...state, page: state.page + 1 });\n\t\tawait getData(state.category, state.page + 1);\n\t\tsetTimeout(function() {\n\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t}, 600);\n\t};\n\n\tconst subPage = async () => {\n\t\tsetState({ ...state, page: state.page - 1 });\n\t\tawait getData(state.category, state.page - 1);\n\t\tsetTimeout(function() {\n\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t{isLoading ? null : (\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon=\"caret-square-left\"\n\t\t\t\t\tclassName={`arrow-left ${page > 1 ? 'visible' : null}`}\n\t\t\t\t\tonClick={subPage}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isLoading ? null : <FontAwesomeIcon icon=\"caret-square-right\" className=\"arrow-right\" onClick={addPage} />}\n\t\t</div>\n\t);\n};\n\nexport default Arrow;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/dbCategoryList.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":9,"column":10,"nodeType":"68","messageId":"69","endLine":9,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":14,"column":5,"nodeType":"72","endLine":14,"endColumn":7,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"67","line":11,"column":10,"nodeType":"68","messageId":"69","endLine":11,"endColumn":15},{"ruleId":"66","severity":1,"message":"74","line":12,"column":17,"nodeType":"68","messageId":"69","endLine":12,"endColumn":25},{"ruleId":"66","severity":1,"message":"75","line":18,"column":10,"nodeType":"68","messageId":"69","endLine":18,"endColumn":16},{"ruleId":"66","severity":1,"message":"76","line":19,"column":10,"nodeType":"68","messageId":"69","endLine":19,"endColumn":22},{"ruleId":"66","severity":1,"message":"77","line":9,"column":10,"nodeType":"68","messageId":"69","endLine":9,"endColumn":28},{"ruleId":"66","severity":1,"message":"78","line":10,"column":17,"nodeType":"68","messageId":"69","endLine":10,"endColumn":25},{"ruleId":"70","severity":1,"message":"79","line":31,"column":19,"nodeType":"68","endLine":31,"endColumn":34},{"ruleId":"62","replacedBy":"80"},{"ruleId":"64","replacedBy":"81"},{"ruleId":"66","severity":1,"message":"82","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":27},{"ruleId":"66","severity":1,"message":"83","line":5,"column":29,"nodeType":"68","messageId":"69","endLine":5,"endColumn":47},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'setValue' is assigned a value but never used.","'loader' is assigned a value but never used.","'dbCategories' is assigned a value but never used.","'displayTopPodcasts' is assigned a value but never used.","'setState' is assigned a value but never used.","Assignments to the 'topPodcasts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["84"],["85"],"'faCaretSquareLeft' is defined but never used.","'faCaretSquareRight' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [setState]",{"range":"89","text":"90"},[424,426],"[setState]"]