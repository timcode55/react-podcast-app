[{"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js":"1","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js":"2","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js":"3","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js":"4","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js":"5","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js":"6","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js":"7","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js":"8","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/arrow/Arrow.js":"9"},{"size":282,"mtime":1616352202000,"results":"10","hashOfConfig":"11"},{"size":1559,"mtime":1618078583000,"results":"12","hashOfConfig":"11"},{"size":1952,"mtime":1617994021000,"results":"13","hashOfConfig":"11"},{"size":611,"mtime":1617994065000,"results":"14","hashOfConfig":"11"},{"size":1590,"mtime":1616353462000,"results":"15","hashOfConfig":"11"},{"size":31988,"mtime":1616204629000,"results":"16","hashOfConfig":"17"},{"size":336,"mtime":1616291141000,"results":"18","hashOfConfig":"11"},{"size":8426,"mtime":1616267921000,"results":"19","hashOfConfig":"11"},{"size":1157,"mtime":1618078919000,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1q9gpa0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"t7kcnj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/index.js",[],["44","45"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/App.js",["46","47"],"import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { PodcastContext } from './context/PodcastContext';\n\nfunction App() {\n\tconst [ podcasts, setPodcasts ] = useState([]);\n\tconst [ state, setState ] = useContext(PodcastContext);\n\n\tuseEffect(() => {\n\t\tgetApiData(67);\n\t\tsetState({ page: 1, category: 67 });\n\t}, []);\n\n\tconst getApiData = async (genreId, page) => {\n\t\tawait fetch(\n\t\t\t`https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=${genreId}&page=${page}&region=us&safe_mode=0`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'X-ListenAPI-Key': process.env.REACT_APP_LISTEN_NOTES_API_KEY\n\t\t\t\t},\n\t\t\t\tcredentials: 'same-origin'\n\t\t\t}\n\t\t).then((response) => {\n\t\t\tresponse.json().then((data) => {\n\t\t\t\tconsole.log(data, 'data in listennotes call see if doubling');\n\t\t\t\tconst getRating = async () => {\n\t\t\t\t\tfor (let pod of data.podcasts) {\n\t\t\t\t\t\tconst id = pod.id;\n\t\t\t\t\t\tawait axios\n\t\t\t\t\t\t\t.get(`http://localhost:7000/findId/?data=${id}`)\n\t\t\t\t\t\t\t.then(function(response) {\n\t\t\t\t\t\t\t\tpod['rating'] = response.data.rating;\n\t\t\t\t\t\t\t\tpod['numberOfRatings'] = response.data.numberOfRatings || 'N/A';\n\t\t\t\t\t\t\t\tpod['itunes'] = response.data.itunes;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tawait setPodcasts([ data.podcasts ]);\n\t\t\t\t};\n\t\t\t\tgetRating();\n\t\t\t});\n\t\t});\n\t};\n\n\treturn <Header podcasts={podcasts} getApiData={getApiData} />;\n}\n\nexport default App;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Header/Header.js",["48"],"import React, { useState, useContext } from 'react';\nimport CardList from '../CardList/CardList';\nimport { array1, array2, categoriesArray } from '../../utils/category-list';\nimport { PodcastContext } from '../../context/PodcastContext';\nimport './Header.css';\n\nconst Header = (props) => {\n\tconst [ state, setState ] = useContext(PodcastContext);\n\tconst [ value, setValue ] = useState('');\n\tconst [ category, setCategory ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetValue(e.target.value);\n\t\tsetState({ page: 1, category: e.target.value });\n\t\tlet findValue = Number(e.target.value);\n\t\tlet findCategory = categoriesArray.find((item) => item.id === findValue).name;\n\t\tsetCategory(findCategory);\n\t\tprops.getApiData(e.target.value, 1);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"top-section\">\n\t\t\t\t<h1 className=\"title\">TOP PODCASTS - {category.toUpperCase() || 'most popular'.toUpperCase()}</h1>\n\t\t\t\t<div className=\"selection-boxes\">\n\t\t\t\t\t<div className=\"selection-box\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<span>Choose a Genre (A - M) </span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select id=\"selection\" name=\"scripts\" onChange={handleChange}>\n\t\t\t\t\t\t\t\t{array1.map((item) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"selection-box\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<span className=\"dropdown-title\">Choose a Genre (M - Z) </span>\n\t\t\t\t\t\t\t\t<select id=\"selection2\" name=\"scripts\" onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t{array2.map((item) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option className=\"option\" key={item.id} value={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CardList podcasts={props} category={parseInt(value)} getData={props.getApiData} />\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/CardList/CardList.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/Card/Card.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/listennotes-array.js",[],["49","50"],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/context/PodcastContext.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/utils/category-list.js",[],"/Volumes/Data/Tim's Coding Projects/podcharts-react/client/src/components/arrow/Arrow.js",["51","52"],"import React, { useContext } from 'react';\nimport './Arrow.css';\nimport { PodcastContext } from '../../context/PodcastContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretSquareLeft, faCaretSquareRight } from '@fortawesome/fontawesome-free-solid';\n\nconst Arrow = (props) => {\n\tconst [ state, setState ] = useContext(PodcastContext);\n\tconst page = state.page;\n\n\tconst addPage = async () => {\n\t\tsetState({ ...state, page: state.page + 1 });\n\t\tawait props.getData(state.category, state.page + 1);\n\t\tsetTimeout(function() {\n\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t}, 600);\n\t};\n\n\tconst subPage = async () => {\n\t\tsetState({ ...state, page: state.page - 1 });\n\t\tawait props.getData(state.category, state.page - 1);\n\t\tsetTimeout(function() {\n\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t}, 600);\n\t};\n\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<FontAwesomeIcon\n\t\t\t\ticon=\"caret-square-left\"\n\t\t\t\tclassName={`arrow-left ${page > 1 ? 'visible' : null}`}\n\t\t\t\tonClick={subPage}\n\t\t\t/>\n\t\t\t<FontAwesomeIcon icon=\"caret-square-right\" className=\"arrow-right\" onClick={addPage} />\n\t\t</div>\n\t);\n};\n\nexport default Arrow;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":14,"column":5,"nodeType":"63","endLine":14,"endColumn":7,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":15},{"ruleId":"53","replacedBy":"65"},{"ruleId":"55","replacedBy":"66"},{"ruleId":"57","severity":1,"message":"67","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":27},{"ruleId":"57","severity":1,"message":"68","line":5,"column":29,"nodeType":"59","messageId":"60","endLine":5,"endColumn":47},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.","ArrayExpression",["71"],["69"],["70"],"'faCaretSquareLeft' is defined but never used.","'faCaretSquareRight' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [setState]",{"range":"74","text":"75"},[424,426],"[setState]"]